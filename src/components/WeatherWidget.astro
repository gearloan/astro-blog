---
// Weather Widget Component
---

<!-- Weather Widget with Tabs -->
<div class="absolute bottom-6 left-1/2 right-auto -translate-x-1/2 z-20 w-full max-w-6xl px-4 md:px-8">
  <div id="weather-card" class="bg-white/70 md:bg-white/50 backdrop-blur-sm rounded-xl shadow-lg w-full max-w-6xl">
    <!-- Tabs -->
    <div class="flex border-b border-white/20 overflow-x-auto scrollbar-hide justify-between items-center">
      <div class="flex">
        <button
          class="tab-button active px-4 py-3 text-sm font-ui font-medium text-slate-600 border-b-2 border-blue-500 bg-white/20"
          data-tab="weather-overview"
        >
          Weather Overview
        </button>
        <button
          class="tab-button px-4 py-3 text-sm font-ui font-medium text-slate-600 border-b-2 border-transparent hover:bg-white/10"
          data-tab="metar"
        >
          METAR
        </button>
        <button
          class="tab-button px-4 py-3 text-sm font-ui font-medium text-slate-600 border-b-2 border-transparent hover:bg-white/10"
          data-tab="taf"
        >
          TAF
        </button>
        <button
          class="tab-button px-4 py-3 text-sm font-ui font-medium text-slate-600 border-b-2 border-transparent hover:bg-white/10"
          data-tab="winds-aloft"
        >
          Winds Aloft
        </button>
      </div>
      
      <!-- Airport/Time + Change Airport Button -->
      <div class="flex items-center gap-3 mr-4">
        <span class="text-xs font-ui text-slate-600" data-airport-display>KBOS | --:--</span>
        <button
          id="change-airport-btn"
          class="px-3 py-2 text-xs font-medium text-slate-600 hover:text-slate-800 hover:bg-white/20 rounded transition-colors"
          title="Change Airport"
        >
          Change Airport
        </button>
      </div>
    </div>

    <!-- Tab Content -->
    <div class="px-4 py-4 md:p-6 relative">
      
      <!-- Weather Overview Tab -->
      <div id="weather-overview-content" class="tab-content h-40 md:h-24">
        <div class="flex flex-wrap lg:flex-nowrap h-full">
          <!-- Weather Header -->
          <div class="flex items-center gap-3 mb-4 mr-4 md:mr-10">
            <div
              class="w-12 h-12 bg-green-400 rounded-full flex items-center justify-center aspect-square weather-sun-container"
            >
              <svg
                class="w-8 h-8 text-green-600 weather-sun-icon"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
                  clip-rule="evenodd"></path>
              </svg>
            </div>
            <div class="flex-1">
              <h3 class="font-ui text-slate-600 text-base whitespace-nowrap">Aviation Weather</h3>
              <p class="text-sm text-slate-600 weather-timestamp" data-airport-display>
                KBOS | --:--
              </p>
              <p class="text-slate-600 text-xs md:text-base font-medium weather-conditions">
                CLEAR SKIES, CALM WINDS
              </p>
            </div>
          </div>

          <!-- Weather Metrics -->
          <div class="flex justify-around items-center w-full md:justify-end md:items-baseline md:flex-1 md:gap-8">
            <!-- Temperature -->
            <div class="text-center">
              <div class="font-blockquote text-6xl md:text-7xl font-bold text-slate-600 weather-temp">
                
              </div>
              <div class="text-xs text-slate-600">TEMP</div>
            </div>

            <!-- Wind -->
            <div class="text-center">
              <div class="font-blockquote text-6xl md:text-7xl font-bold text-slate-600 weather-wind">
                
              </div>
              <div class="text-xs text-slate-600">WIND kt</div>
            </div>

            <!-- Visibility -->
            <div class="text-center hidden md:block">
              <div class="font-blockquote text-6xl md:text-7xl font-bold text-slate-600 weather-visibility">
                
              </div>
              <div class="text-xs text-slate-600">MILES</div>
              <div class="text-xs text-slate-600">VISIBILITY</div>
            </div>

            <!-- Pressure -->
            <div class="text-center">
              <div class="font-blockquote text-5xl md:text-7xl font-bold text-slate-600 weather-pressure">
                
              </div>
              <div class="text-xs text-slate-600">PRESSURE</div>
            </div>
          </div>
        </div>
      </div>

      <!-- METAR Tab -->
      <div id="metar-content" class="tab-content hidden min-h-48 overflow-y-auto">
        <div class="flex items-center justify-center h-full">
          <div class="text-center">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-4"></div>
            <p class="text-slate-600">Loading METAR data...</p>
          </div>
        </div>
      </div>

      <!-- TAF Tab -->
      <div id="taf-content" class="tab-content hidden min-h-48 overflow-y-auto">
        <div class="flex items-center justify-center h-full">
          <div class="text-center">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-4"></div>
            <p class="text-slate-600">Loading TAF data...</p>
          </div>
        </div>
      </div>

      <!-- Winds Aloft Tab -->
      <div id="winds-aloft-content" class="tab-content hidden max-h-64 md:max-h-80 overflow-y-auto">
        <div class="flex items-center justify-center h-full">
          <div class="text-center">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-4"></div>
            <p class="text-slate-600">Loading winds aloft data...</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Airport Search Modal -->
<div id="airport-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
  <div class="bg-white rounded-lg p-6 max-w-md mx-4 shadow-xl w-full">
    <div class="flex justify-between items-center mb-4">
      <h3 class="text-lg font-semibold text-gray-800">Change Airport</h3>
      <button id="close-airport-modal" class="text-gray-500 hover:text-gray-700">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
    
    <div class="mb-4">
      <label for="airport-search" class="block text-sm font-medium text-gray-700 mb-2">
        Search for an airport:
      </label>
      <input
        type="text"
        id="airport-search"
        placeholder="Enter airport code or name (e.g., KFDK, LAX, JFK)"
        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
      />
    </div>
    
    <div id="airport-suggestions" class="max-h-48 overflow-y-auto border border-gray-200 rounded-md hidden">
      <!-- Airport suggestions will be populated here -->
    </div>
    
    <div class="flex justify-end gap-3 mt-4">
      <button id="cancel-airport-change" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md transition-colors">
        Cancel
      </button>
      <button id="confirm-airport-change" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md transition-colors" disabled>
        Change Airport
      </button>
    </div>
  </div>
</div>


<script>
  // Tab functionality
  document.addEventListener('DOMContentLoaded', function() {
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');
    const weatherCard = document.getElementById('weather-card');
    function setCardOpacity(tabKey: string) {
      if (!weatherCard) return;
      weatherCard.classList.remove('bg-white/70', 'bg-white/90', 'bg-white/95', 'md:bg-white/50', 'md:bg-white/70');
      if (tabKey === 'weather-overview') {
        weatherCard.classList.add('bg-white/70', 'md:bg-white/50');
      } else {
        weatherCard.classList.add('bg-white/95', 'md:bg-white/70');
      }
    }

    tabButtons.forEach(button => {
      button.addEventListener('click', function(this: HTMLElement) {
        const targetTab = this.getAttribute('data-tab');

        // Remove active class from all buttons
        tabButtons.forEach(btn => {
          btn.classList.remove('active', 'border-blue-500', 'bg-white/20');
          btn.classList.add('border-transparent');
        });

        // Add active class to clicked button
        this.classList.add('active', 'border-blue-500', 'bg-white/20');
        this.classList.remove('border-transparent');

        // Hide all tab contents
        tabContents.forEach(content => {
          content.classList.add('hidden');
        });

        // Show target tab content
        const targetContent = document.getElementById(targetTab + '-content');
        if (targetContent) {
          targetContent.classList.remove('hidden');
        }

        // Adjust card opacity for selected tab
        setCardOpacity(targetTab || 'weather-overview');

        // Notify parent (Hero) about tab change so it can control background video
        try {
          window.dispatchEvent(new CustomEvent('weather-tab-changed', { detail: { tab: targetTab } }));
        } catch {}

        // Trigger winds aloft widget update when that tab is selected
        if (targetTab === 'winds-aloft') {
          // Dispatch a custom event to trigger winds aloft update
          window.dispatchEvent(new CustomEvent('winds-aloft-tab-selected'));
        }

        // Trigger METAR widget update when that tab is selected
        if (targetTab === 'metar') {
          // Dispatch a custom event to trigger METAR update
          window.dispatchEvent(new CustomEvent('metar-tab-selected'));
        }

        // Trigger TAF widget update when that tab is selected
        if (targetTab === 'taf') {
          // Dispatch a custom event to trigger TAF update
          window.dispatchEvent(new CustomEvent('taf-tab-selected'));
        }
      });
    });
    // Initialize opacity to match default active tab
    setCardOpacity('weather-overview');
  });
</script>

<script>
  // Force cache busting
  console.log('WeatherWidget script loading at:', new Date().toISOString());
  
  import weatherWidget from '../scripts/weather-widget.ts';
  import windsAloftWidget from '../scripts/winds-aloft-widget.ts';
  import tafWidget from '../scripts/taf-widget.ts';
  import metarWidget from '../scripts/metar-widget.ts';
  import airportSearch from '../scripts/airport-search.ts';
  
  // Initialize the weather widgets when the page loads
  document.addEventListener('DOMContentLoaded', () => {
    console.log('WeatherWidget DOMContentLoaded - initializing widgets at:', new Date().toISOString());
    // Initialize airport search FIRST and make it globally available
    (window as any).airportSearch = new airportSearch();

    // Then initialize widgets so they can read the current airport immediately
    new weatherWidget();
    new windsAloftWidget();
    new tafWidget();
    new metarWidget();

    // Optionally broadcast current airport so widgets refresh instantly
    try {
      const current = (window as any).airportSearch?.getCurrentAirport?.();
      if (current) {
        window.dispatchEvent(new CustomEvent('airport-changed', { detail: { airport: current } }));
      }
    } catch {}
 
  });
</script>
