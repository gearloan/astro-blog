---
interface ImgSet { avif?: string; webp?: string; jpg: string }
interface Props {
  title: string
  strapline?: string[]
  bg: { alt: string; mobile: ImgSet; desktop: ImgSet }
  items: Array<{ title: string; copy: string }>
}

const {
  title = "Everything You Need to Fly",
  strapline = [
    "From your first lesson",
    "To your last landing",
    "AOPA is with you every step of the way.",
  ],
  bg = {
    alt: "Mountain range with clouds",
    mobile: { jpg: "/images/need-mobile.jpg" },
    desktop: { jpg: "/images/home/patagonia.jpg" },
  },
  items = [
    { title: "Flight Training Resources", copy: "Comprehensive guides, training materials, and scholarship opportunities for aspiring pilots." },
    { title: "Safety & Education", copy: "Worldâ€‘class safety programs, weather resources, and continuing education for all pilots." },
    { title: "Pilot Protection Services", copy: "Legal support, medical certification assistance, and advocacy when you need it most." },
    { title: "Government Advocacy", copy: "Fighting for your rights in Congress, with federal agencies, and at the state level." },
  ],
} = Astro.props as Props;
---

<section class="relative isolate">
  <!-- BG image -->
  <div class="relative w-full overflow-hidden rounded-xl my-8">
    <picture>
      {bg.desktop.avif && <source srcset={bg.desktop.avif} type="image/avif" media="(min-width:1024px)" />}
      {bg.desktop.webp && <source srcset={bg.desktop.webp} type="image/webp" media="(min-width:1024px)" />}
      <source srcset={bg.desktop.jpg} media="(min-width:1024px)" />
      {bg.mobile.avif && <source srcset={bg.mobile.avif} type="image/avif" media="(max-width:1023px)" />}
      {bg.mobile.webp && <source srcset={bg.mobile.webp} type="image/webp" media="(max-width:1023px)" />}
      <img
        id="everything-bg-img"
        src={bg.mobile.jpg}
        alt={bg.alt}
        class="block h-full w-full object-cover will-change-transform"
        loading="lazy"
      />
    </picture>

    <!-- Gradient to help text contrast -->
    <div class="absolute inset-0 bg-gradient-to-b from-white/0 via-white/10 to-white/0" aria-hidden="true"></div>

    <!-- Content overlay -->
    <div class="absolute inset-0">
      <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
        <!-- Title -->
        <h2 class="pt-10 text-center font-heading text-4xl font-extrabold tracking-tight text-sky-900 mb-8 sm:text-5xl lg:text-6xl drop-shadow">
          {title}
        </h2>

        <!-- Strapline with rule + dots -->
        <div class="mt-4 flex items-center">
          <span class="h-8 w-8 -ml-2 rounded-full border-2 border-sky-900/60 bg-white/40 backdrop-blur-sm"></span>
          <div class="mx-3 flex-1 border-t-2 border-sky-900/60 relative">
            <div class="absolute inset-0 flex items-center justify-between px-2 text-[11px] font-semibold uppercase tracking-wide text-slate-800/90 -mt-8">
              {strapline.slice(0,3).map((s, i) => (
                <span class="bg-white/50 px-2 py-0.5 rounded">{s}</span>
              ))}
            </div>
          </div>
          <span class="h-8 w-8 -mr-2 rounded-full border-2 border-sky-900/60 bg-white/40 backdrop-blur-sm"></span>
        </div>

        <!-- Frosted panel with items -->
        <div class="mt-24 rounded-2xl bg-white/65 p-6  shadow-lg ring-1 ring-slate-200/70 backdrop-blur-md sm:p-8 py-[4rem]">
          <div class="grid gap-x-10 gap-y-8 md:grid-cols-2 p-8">
            {items.slice(0,4).map((it) => (
              <div>
                <h3 class="font-bold text-4xl uppercase tracking-wide font-blockquote text-sky-900">
                  {it.title}
                </h3>
                <p class="mt-2 text-slate-700">
                  {it.copy}
                </p>
              </div>
            ))}
          </div>
        </div>

        <div class="pb-10"></div>
      </div>
    </div>
  </div>
</section>

<script>
  import gsap from 'gsap';
  import ScrollTrigger from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);
  
  const image = document.getElementById('everything-bg-img') as HTMLImageElement | null;
  const container = image?.closest('section') as HTMLElement | null;
  
  if (image && container) {
    gsap.fromTo(
      image,
      { scale: 1 }, // start slightly zoomed in
      {
        scale: 1.2, // scale up to 1.2x
        ease: 'none',
        scrollTrigger: {
          trigger: container,
          start: 'top bottom',
          end: 'bottom top',
          scrub: 1, // smooth scrubbing
          pin: false,
          markers: false,
        },
      }
    );
    
    // Refresh on image load
    if (image.complete) ScrollTrigger.refresh();
    else image.addEventListener('load', () => ScrollTrigger.refresh(), { once: true });
  }
</script>
